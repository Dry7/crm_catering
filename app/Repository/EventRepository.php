<?php

namespace App\Repository;

use App\Criteria\UserIDCriteria;
use Illuminate\Support\Facades\Auth;

class EventRepository extends BaseRepository
{
    public function boot()
    {
        $this->pushCriteria(UserIDCriteria::class);

        parent::boot();
    }

    function model()
    {
        return 'App\\Models\\Event';
    }

    /**
     * Save a new entity in repository
     *
     * @param array $attributes
     *
     * @return mixed
     */
    public function create(array $attributes)
    {
        return parent::create(self::discount($attributes)); // TODO: Change the autogenerated stub
    }

    /**
     * Update a entity in repository by id
     *
     * @param array $attributes
     * @param       $id
     *
     * @return mixed
     */
    public function update(array $attributes, $id)
    {
        return parent::update(self::discount($attributes, $this->find($id)->max_discount), $id);
    }

    /**
     * Set max discount
     *
     * @param array $attributes
     * @return array
     */
    private static function discount(array $attributes, $max_discount = 10)
    {
        if (Auth::user()->isAdmin()) {
            if (isset($attributes['discount'])) {
                $attributes['max_discount'] = $attributes['discount'];
            }
        } else {
            if (@$attributes['discount'] > $max_discount) {
                $attributes['discount'] = $max_discount;
            }
        }

        return $attributes;
    }
}